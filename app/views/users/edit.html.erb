<div class="flex flex-col items-center p-3">
    <div class="w-full sm:max-w-2xl rounded-xl bg-white shadow-sm p-3">
        <%= form_with model: @user, url: user_path, method: :put, class: "w-full" do |f| %>
            <div class="flex justify-end">
                <%= f.submit '更新する', class: "btn btn-accent rounded-full shadow-sm text-white" %>
            </div>
            <div class="flex flex-col items-center">
                <div class="max-w-25 relative">
                    <% if @user.avatar.present? %>
                        <%= image_tag @user.avatar, class: "rounded-full object-cover aspect-1/1" %>
                    <% else %>
                        <%= image_tag 'user_default_icon.png', class: "rounded-full object-cover aspect-1/1" %>
                    <% end %>
                    <div id="avatar" class="absolute top-0 left-0 bg-white">
                        <img id="avatar_preview" class="rounded-full object-cover aspect-1/1">
                    </div>
                </div>
                <%= f.label :avatar, '画像を設定', class: "form-label my-2 px-2 py-[6px] border border-zinc-700 rounded-full text-xs text-zinc-700 align-center font-bold" %>
                <%= f.file_field :avatar, onchange: "avatarImage(this);", accept: "image/jpeg,image/png", class: "hidden" %>
                <div class="w-full mt-3 p-1">
                    <div class="mb-5">
                        <p>ユーザーネーム</p>
                        <%= f.text_field :name, placeholder: "名前を入力してください", class: "w-full border-b border-zinc-500 outline-none p-1 text-base" %>
                    </div>
                    <div class="mb-5">
                        <p>ユーザーID</p>
                        <%= f.text_field :uid, placeholder: "半角英数字で入力してください", class: "w-full border-b border-zinc-500 outline-none p-1 text-base" %>
                    </div>
                </div>
            </div>
        <% end %>
        <div class="w-full flex justify-between items-center p-1">
            <div class="flex flex-col">
                <p>メールアドレス</p>
                <p><%= @user.email %></p>
            </div>
            <%= link_to "変更する", user_email_path, class: "flex-none px-2 py-[6px] border border-zinc-700 rounded-full text-xs text-zinc-700 align-center font-bold", data: { turbo: false } %>
        </div>
    </div>
    <div data-controller="delete-user">
        <div class="sm:max-w-2xl flex flex-col items-center mt-20">
            <button type="button" class="w-full btn btn-outline btn-error bg-white rounded-full" data-action="click->delete-user#show">アカウントを削除する</button>
        </div>
        <dialog class="modal" data-delete-user-target="modal">
            <div class="modal-box p-4 bg-white">
                <p class="text-xl font-bold mb-4">アカウントを削除</p>
                <p class="text-lg mb-4">本当にアカウントを削除しますか？</p>
                <div class="flex items-end mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 fill-amber-300"><path fill-rule="evenodd" d="M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 8.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z" clip-rule="evenodd" /></svg>
                    <p class="ml-2 text-sm">
                        削除すると<span class="text-rose-700 font-bold text-sm">すべてのデータが消去されます</span>
                    </p>
                </div>
                <div class="mt-2 grid grid-cols-2 gap-3">
                    <%= link_to "アカウントを削除する", user_path, data: { turbo_method: :delete, turbo_confirm: "本当にアカウントを削除しますか？" }, class: "col-span-1 py-2 bg-rose-500 rounded-sm text-sm text-white font-bold text-center" %>
                    <button type="button" class="col-span-1 py-2 border border-zinc-300 rounded-sm text-xs text-zinc-500 font-bold" data-action="click->delete-user#close">閉じる</button>
                </div>
            </div>
        </dialog>
    </div>
</div>

<!------ プレビュー表示用の JavaScript ------->
<script>
    function avatarImage(obj){
        var fileReader = new FileReader();
        fileReader.onload = (function() {
        document.querySelector('#avatar_preview').src = fileReader.result;
        });
        fileReader.readAsDataURL(obj.files[0]);
    }

</script>
